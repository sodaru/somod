# yaml-language-server: $schema=../../../../../schema/schemas/serverless-template/index.json

Resources:
  ManagementApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: >
        Management Api for Push Notifications
        API List
        1. POST /notify - Use this api to send notifications

  WebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: PushNotificationWebSocketService
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        SOMOD::Ref:
          resource: WebSocketApi
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - SOMOD::Ref:
              resource: ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        SOMOD::Ref:
          resource: WebSocketApi
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        SOMOD::Ref:
          resource: WebSocketApi
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - SOMOD::Ref:
              resource: DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        SOMOD::Ref:
          resource: WebSocketApi
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - DisconnectRoute
    Properties:
      ApiId:
        SOMOD::Ref:
          resource: WebSocketApi
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId:
        SOMOD::Ref:
          resource: Deployment
      ApiId:
        SOMOD::Ref:
          resource: WebSocketApi
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "connectionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "connectionId"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: True
  MessagesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "messageId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "messageId"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: True
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        SOMOD::Function:
          type: Websocket
          name: onconnect
      Handler: app.handler
      MemorySize: 256
      Environment:
        Variables:
          TABLE_NAME:
            SOMOD::Ref:
              resource: ConnectionsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              SOMOD::Ref:
                resource: ConnectionsTable
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WebSocketApi
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        SOMOD::Ref:
          resource: OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        SOMOD::Function:
          type: Websocket
          name: ondisconnect
      MemorySize: 256
      Environment:
        Variables:
          TABLE_NAME:
            SOMOD::Ref:
              resource: ConnectionsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              SOMOD::Ref:
                resource: ConnectionsTable
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WebSocketApi
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        SOMOD::Ref:
          resource: OnDisconnectFunction
      Principal: apigateway.amazonaws.com

  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        SOMOD::Function:
          type: DynamoDB
          name: sendmessage
      MemorySize: 256
      Environment:
        Variables:
          TABLE_NAME:
            SOMOD::Ref:
              resource: ConnectionsTable
          CONNECTIONS_ENDPOINT: !Sub "https://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
      Events:
        StreamFromMessagesTable:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt MessagesTable.StreamArn
            BatchSize: 1
            StartingPosition: LATEST
            MaximumRetryAttempts: 3
            ParallelizationFactor: 10
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              SOMOD::Ref:
                resource: ConnectionsTable
        - Statement:
            - Effect: Allow
              Action:
                - "execute-api:ManageConnections"
              Resource:
                - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApi}/*"
      Timeout: 300 # 5 minutes

  ReceiveMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        SOMOD::Function:
          type: HttpApi
          name: receivemessage
      MemorySize: 256
      Environment:
        Variables:
          TABLE_NAME:
            SOMOD::Ref:
              resource: MessagesTable
      Events:
        HttpNotifyApi:
          Type: HttpApi
          Properties:
            ApiId:
              SOMOD::Ref:
                resource: ManagementApi
            Method: POST
            Path: /notify
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              SOMOD::Ref:
                resource: MessagesTable

Outputs:
  ManagementApiURI:
    Fn::Sub:
      - "https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com/"
      - ApiId:
          SOMOD::Ref:
            resource: ManagementApi

  WebSocketURI:
    Fn::Sub:
      - "https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
      - ApiId:
          SOMOD::Ref:
            resource: WebSocketApi
        Stage:
          SOMOD::Ref:
            resource: Stage
